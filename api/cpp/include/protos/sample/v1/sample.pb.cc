// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/sample/v1/sample.proto

#include "protos/sample/v1/sample.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace sample {
namespace v1 {
PROTOBUF_CONSTEXPR SampleRequest::SampleRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.request_sample_field_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SampleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SampleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SampleRequestDefaultTypeInternal() {}
  union {
    SampleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SampleRequestDefaultTypeInternal _SampleRequest_default_instance_;
PROTOBUF_CONSTEXPR SampleResponse::SampleResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.response_sample_field_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SampleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SampleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SampleResponseDefaultTypeInternal() {}
  union {
    SampleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SampleResponseDefaultTypeInternal _SampleResponse_default_instance_;
}  // namespace v1
}  // namespace sample
static ::_pb::Metadata file_level_metadata_protos_2fsample_2fv1_2fsample_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_protos_2fsample_2fv1_2fsample_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_protos_2fsample_2fv1_2fsample_2eproto = nullptr;

const uint32_t TableStruct_protos_2fsample_2fv1_2fsample_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sample::v1::SampleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sample::v1::SampleRequest, _impl_.request_sample_field_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sample::v1::SampleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sample::v1::SampleResponse, _impl_.response_sample_field_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::sample::v1::SampleRequest)},
  { 7, -1, -1, sizeof(::sample::v1::SampleResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::sample::v1::_SampleRequest_default_instance_._instance,
  &::sample::v1::_SampleResponse_default_instance_._instance,
};

const char descriptor_table_protodef_protos_2fsample_2fv1_2fsample_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035protos/sample/v1/sample.proto\022\tsample."
  "v1\"A\n\rSampleRequest\0220\n\024request_sample_fi"
  "eld\030\001 \001(\tR\022requestSampleField\"D\n\016SampleR"
  "esponse\0222\n\025response_sample_field\030\001 \001(\tR\023"
  "responseSampleField2P\n\rSampleService\022\?\n\006"
  "Sample\022\030.sample.v1.SampleRequest\032\031.sampl"
  "e.v1.SampleResponse\"\000B\232\001\n\rcom.sample.v1B"
  "\013SampleProtoP\001Z7github.com/tsingson/grpc"
  "-demo/protos/sample/v1;samplev1\242\002\003SXX\252\002\t"
  "Sample.V1\312\002\tSample\\V1\342\002\025Sample\\V1\\GPBMet"
  "adata\352\002\nSample::V1b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_protos_2fsample_2fv1_2fsample_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2fsample_2fv1_2fsample_2eproto = {
    false, false, 426, descriptor_table_protodef_protos_2fsample_2fv1_2fsample_2eproto,
    "protos/sample/v1/sample.proto",
    &descriptor_table_protos_2fsample_2fv1_2fsample_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_protos_2fsample_2fv1_2fsample_2eproto::offsets,
    file_level_metadata_protos_2fsample_2fv1_2fsample_2eproto, file_level_enum_descriptors_protos_2fsample_2fv1_2fsample_2eproto,
    file_level_service_descriptors_protos_2fsample_2fv1_2fsample_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2fsample_2fv1_2fsample_2eproto_getter() {
  return &descriptor_table_protos_2fsample_2fv1_2fsample_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2fsample_2fv1_2fsample_2eproto(&descriptor_table_protos_2fsample_2fv1_2fsample_2eproto);
namespace sample {
namespace v1 {

// ===================================================================

class SampleRequest::_Internal {
 public:
};

SampleRequest::SampleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sample.v1.SampleRequest)
}
SampleRequest::SampleRequest(const SampleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SampleRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.request_sample_field_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.request_sample_field_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_sample_field_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_request_sample_field().empty()) {
    _this->_impl_.request_sample_field_.Set(from._internal_request_sample_field(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:sample.v1.SampleRequest)
}

inline void SampleRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.request_sample_field_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.request_sample_field_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_sample_field_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SampleRequest::~SampleRequest() {
  // @@protoc_insertion_point(destructor:sample.v1.SampleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SampleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.request_sample_field_.Destroy();
}

void SampleRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SampleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.v1.SampleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_sample_field_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SampleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string request_sample_field = 1 [json_name = "requestSampleField"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_request_sample_field();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sample.v1.SampleRequest.request_sample_field"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SampleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample.v1.SampleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_sample_field = 1 [json_name = "requestSampleField"];
  if (!this->_internal_request_sample_field().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_sample_field().data(), static_cast<int>(this->_internal_request_sample_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sample.v1.SampleRequest.request_sample_field");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_request_sample_field(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.v1.SampleRequest)
  return target;
}

size_t SampleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sample.v1.SampleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string request_sample_field = 1 [json_name = "requestSampleField"];
  if (!this->_internal_request_sample_field().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_sample_field());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SampleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SampleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SampleRequest::GetClassData() const { return &_class_data_; }


void SampleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SampleRequest*>(&to_msg);
  auto& from = static_cast<const SampleRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sample.v1.SampleRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_request_sample_field().empty()) {
    _this->_internal_set_request_sample_field(from._internal_request_sample_field());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SampleRequest::CopyFrom(const SampleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sample.v1.SampleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SampleRequest::IsInitialized() const {
  return true;
}

void SampleRequest::InternalSwap(SampleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.request_sample_field_, lhs_arena,
      &other->_impl_.request_sample_field_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SampleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fsample_2fv1_2fsample_2eproto_getter, &descriptor_table_protos_2fsample_2fv1_2fsample_2eproto_once,
      file_level_metadata_protos_2fsample_2fv1_2fsample_2eproto[0]);
}

// ===================================================================

class SampleResponse::_Internal {
 public:
};

SampleResponse::SampleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sample.v1.SampleResponse)
}
SampleResponse::SampleResponse(const SampleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SampleResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.response_sample_field_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.response_sample_field_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_sample_field_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_response_sample_field().empty()) {
    _this->_impl_.response_sample_field_.Set(from._internal_response_sample_field(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:sample.v1.SampleResponse)
}

inline void SampleResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.response_sample_field_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.response_sample_field_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_sample_field_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SampleResponse::~SampleResponse() {
  // @@protoc_insertion_point(destructor:sample.v1.SampleResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SampleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.response_sample_field_.Destroy();
}

void SampleResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SampleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.v1.SampleResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_sample_field_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SampleResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string response_sample_field = 1 [json_name = "responseSampleField"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_response_sample_field();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sample.v1.SampleResponse.response_sample_field"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SampleResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample.v1.SampleResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_sample_field = 1 [json_name = "responseSampleField"];
  if (!this->_internal_response_sample_field().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_response_sample_field().data(), static_cast<int>(this->_internal_response_sample_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sample.v1.SampleResponse.response_sample_field");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_response_sample_field(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.v1.SampleResponse)
  return target;
}

size_t SampleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sample.v1.SampleResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string response_sample_field = 1 [json_name = "responseSampleField"];
  if (!this->_internal_response_sample_field().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_response_sample_field());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SampleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SampleResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SampleResponse::GetClassData() const { return &_class_data_; }


void SampleResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SampleResponse*>(&to_msg);
  auto& from = static_cast<const SampleResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sample.v1.SampleResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_response_sample_field().empty()) {
    _this->_internal_set_response_sample_field(from._internal_response_sample_field());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SampleResponse::CopyFrom(const SampleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sample.v1.SampleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SampleResponse::IsInitialized() const {
  return true;
}

void SampleResponse::InternalSwap(SampleResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.response_sample_field_, lhs_arena,
      &other->_impl_.response_sample_field_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SampleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fsample_2fv1_2fsample_2eproto_getter, &descriptor_table_protos_2fsample_2fv1_2fsample_2eproto_once,
      file_level_metadata_protos_2fsample_2fv1_2fsample_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace sample
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::sample::v1::SampleRequest*
Arena::CreateMaybeMessage< ::sample::v1::SampleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sample::v1::SampleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sample::v1::SampleResponse*
Arena::CreateMaybeMessage< ::sample::v1::SampleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sample::v1::SampleResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
